name: Deploy EC2

on:
  workflow_dispatch:

jobs:
  Generate-SSH-Keypair:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Make data dir
        run: mkdir ./terraform/data

      - name: Generate an ssh keypair
        run: ssh-keygen -t rsa -b 4096 -f ./terraform/data/ec2 -N ${{ secrets.SSH_KEY_PASSPHRASE  }}

      - name: Output private key
        run: cat ./terraform/data/ec2

      - uses: actions/upload-artifact@v4
        with:
          name: ec2.pub
          path: ./terraform/data/ec2.pub
          overwrite: true
          retention-days: 1

  Terraform:
    needs: [Generate-SSH-Keypair]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ec2.pub
          path: ./terraform/data/ec2.pub

      - name: Create env vars
        run: |
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID  }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY  }}"

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.0"

      - name: Terraform init
        id: init
        run: |
          terraform init \
          -chdir=./terraform \
          -backend-config="bucket=${{ vars.BACKEND_CONFIG_BUCKET  }}" \
          -backend-config="key=${{ vars.BACKEND_CONFIG_KEY  }}" \
          -backend-config="region=${{ vars.BACKEND_CONFIG_REGION  }}" \
          -backend-config="dynamodb_table=${{ vars.BACKEND_CONFIG_DYNAMODB_TABLE  }}"

      - name: Terraform plan
        id: plan
        run: |
          terraform plan \
          -chdir=./terraform \
          -out=tfplan.out

      - name: Teraform apply
        id: apply
        run: |
          terraform apply \
          -chdir=./terraform \
          tfplan.out
